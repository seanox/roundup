# Description
#
# The filter file is a text file that is read line by line.
# A hash at the beginning of a line (blank characters are allowed before) marks
# the line as a comment. Comments are not read and skipped. Means they are
# processed as if the line does not exist.
#
# The filters are divided into sections.
# A section begins after a blank line or if the line does not begin with a blank
# character. Therefore, the subsequent lines of a section are indented.
# 
# The section of a filter starts with a statement.
# Syntax: <alias from an account in roundup.ini> <source> <target>
# The alias is case-insensitive.
#
# Patterns and expressions follow the statement.
# Each line is a pattern or an expression.
# Filters support multiple patterns but only one expression.
# You can define multiple patterns with the same alias. The last pattern to an
# alias is always used. Expressions can also be defined multiple times, but only
# the last expression is used.
#
# Syntax of a pattern:
# PAT: <alias> <regular expression>
# The alias is case-insensitive.
#
# Syntax of a expression:
# EXP: <logical expression>
# Supported: AND, OR, NOT, round brackets and the aliases of the patterns.
# The alias is case-insensitive.
# An alias returns TRUE or FALSE.
# If the logical expression is TRUE, the statement is executed.
#
# The e-mail is optimized for the filters (only in memory, nor in real).
# Each header is summarized in one line.
# If a header is an array, a header line is created for each array entry.
# The values of the headers are decoded if appropriate.
# Syntax of the header lines:
# <header>: <value>
# 
# Header and body are separated by a blank line [CRLF][CRLF].
#
# Uses the body multi-parts with a boundary. The multi-parts remain intact.
# The body/content of the multi-parts for the Content-Type: text/* are decoded
# and combined in one line. For other data types, only the alias DATA
# <Content Type> is used.
#
# If the body does not use a multipart, the content is decoded in one line.



# Find all desired newsletters and move them from inbox to newsletter.
EX-A /INBOX > /Newsletter
  PAT: A0 /^From:.*news(letter)*.*@.*/im
  PAT: AB /^From:.*@.*(\.bahn||\.brax|\.buecher)\.(de|com)/im
  PAT: AC /^From:.*@.*(\.conrad)\.(de|com)/im
  PAT: AD /^From:.*@.*(\.deerberg)\.(de|com)/im
  PAT: AF /^From:.*@.*(\.fahrrad)\.(de|com)/im
  PAT: AH /^From:.*@.*(\.hessnatur)\.(de|com)/im
  PAT: AL /^From:.*@.*(\.landsend)\.(de|com)/im
  PAT: B1 /^From:.*service@.*\.cyberport\.de/im
  PAT: B2 /http(s)*:\/\/news\.cyberport\.de/
  EXP: (A0 && (AB || AC || AD || AF || AH || AL)) || (B1 && B2)

# Find unwanted newsletters and move them to spam.  
EX-A /INBOX > /Spam
  PAT: A /^(From):.*((news(letter)*)|local|localhost|(deal(s)*\b)).*/im
  PAT: B /^(Received):.*((news(letter)*)|empfehlung(deal(s)*\b)).*/im
  PAT: C /(newsletter|jetzt) (abmelden)/i
  PAT: D /<a\s[^>]+http(s)*:\/\/[^>]+\bunsubscribe\b/i
  PAT: E /^List-Unsubscribe:/im
  EXP: A || B || C || D || E
 
# Find fake messages about undelivered mails and messages and move them to spam.
# Find jackpot mail with huge sums of money.  
EX-A /INBOX > /Spam
  PAT: A /(view|broken|missed)\s+(email|message|notification)/i
  PAT: B /\d{3}\.\d{3}\.0{2}[^\d]/i
  EXP: A || B

# Find fake messages from google|ebay|facebook where the company name does not
# appear in the e-mail address.
EX-A /INBOX > /Spam
  PAT: A /^From:.*(google|facebook|ebay)/im
  PAT: B /^From:.*?(google|facebook|ebay).*<.*@[^>]*\1\.(com|de)>/im
  EXP: A && !B  

# Find all desired newsletters and move them from inbox to newsletter.
EX-B /INBOX > /Newsletter
  PAT: A0 /^From:.*news(letter)*.*@.*/im
  PAT: AM /^From:.*@.*(\.mediamarkt)\.(de|com)/im
  PAT: AS /^From:.*@.*(\.saturn)\.(de|com)/im
  EXP: (A0 && (AM || AS))
